#!/usr/bin/perl

$xoff = $ARGV[0];
shift @ARGV;

print STDERR "$xoff\n";

$header = <STDIN>;
$header = <STDIN>;

# 982324

$min = -1.523;
$max = 4.418;

$width = 14000;
$height = 20;
# really 24 after offset and borders

print "36 36 scale\n";
# so now 864 points tall

$below = 4;
print "0 $below translate\n";
$mbelow = -$below;

# big background
printf("%.3f %.3f %.3f setrgbcolor\n", 41/255, 147/255, 251/255);
print "newpath 0 $mbelow moveto $width $mbelow lineto $width $height lineto 0 $height lineto closepath fill\n";

# daily tide variation
$bottom .= sprintf("%.3f %.3f %.3f setrgbcolor\n", 233/255, 63/255, 51/255);

# fill for daily tide
$behind .= sprintf("%.3f %.3f %.3f setrgbcolor\n", 89/255, 193/255, 200/255);

#print "newpath 0 $height moveto\n";
#$within = 1;

while (<STDIN>) {
	chomp;
	($date, $level) = split(/,/);

	$year = $date;
	$year =~ s/-.*//;

	$x{$year} += $seq / 982324 * $width;
	$y{$year} += $level;
	$count{$year}++;

	$avg += ($level - $min) * $height / ($max - $min);
	$count++;

	$bottom .= sprintf("%.6f %.6f %s\n",
		$seq++ / 982324 * $width - $xoff,
		($level - $min) * $height / ($max - $min),
		$within ? "lineto" : "moveto");

	if (!$within) {
		$behind .= sprintf("newpath %.6f %.6f moveto\n",
			($seq - 2) / 982324 * $width - $xoff,
			$mbelow);
	}

	$within = 1;

	$behind .= sprintf("%.6f %.6f %s\n",
		($seq - 1) / 982324 * $width - $xoff,
		($level - $min) * $height / ($max - $min),
		"lineto");

	if ($seq % 200 == 0) {
		$bottom .= "stroke\n";

		$behind .= sprintf("%.6f %.6f %s\n",
			($seq) / 982324 * $width - $xoff,
			($level - $min) * $height / ($max - $min),
			"lineto");
		$behind .= sprintf("%.6f %.6f lineto closepath fill\n",
			($seq) / 982324 * $width - $xoff,
			$mbelow);
		$behind .= sprintf("newpath %.6f %.6f moveto\n",
			($seq - 2) / 982324 * $width - $xoff,
			$mbelow);
		$behind .= sprintf("%.6f %.6f %s\n",
			($seq - 2) / 982324 * $width - $xoff,
			($level - $min) * $height / ($max - $min),
			"lineto");

		$bottom .= sprintf("%.6f %.6f %s\n",
			$seq++ / 982324 * $width - $xoff,
			($level - $min) * $height / ($max - $min),
			"moveto");
	}
}

if ($within) {
	$bottom .= "stroke\n";

	$within = 0;

	$behind .= sprintf("%.6f %.6f lineto closepath fill\n",
		($seq) / 982324 * $width - $xoff,
		$mbelow);
}

print $behind;

print ".05 setlinewidth\n";

$maxavg = $y{1910} / $count{1910};
$minavg = $y{1910} / $count{1910};

for $year (sort(keys(%count))) {
	$v = $y{$year} / $count{$year};

	if ($v > $maxavg) {
		$maxavg = $v;
	}
	if ($v < $minavg) {
		$minavg = $v;
	}
}

# ???
printf("%.3f %.3f %.3f setrgbcolor\n", 0, 0, 0);

print "newpath -$xoff $mbelow moveto\n";
$within = 1;
for $year (sort(keys(%count))) {
	printf("%.6f %.6f %s %% %s\n",
		$x{$year} / $count{$year} - $xoff,
		($y{$year} / $count{$year} - $minavg) * $height * .5 / ($maxavg - $minavg) + $mbelow,
		$within ? "lineto" : "moveto",
		$year);

	$within = 1;
}

# yearly trend
printf("%.3f %.3f %.3f setrgbcolor\n", 41/255, 147/255, 251/255);

printf("%.6f %.6f %s\n",
	$seq / 982324 * $width - $xoff,
	$mbelow,
	"lineto closepath fill\n");


print $bottom;

$extraheight = $height + .333333;

# print "0 $height moveto $width $height lineto $width $extraheight lineto 0 $extraheight lineto closepath fill\n";

# printf("%.3f %.3f %.3f setrgbcolor\n", 89/255, 173/255, 228/255);

$mbelow = -$below;
# print "-$xoff 0 moveto 0 $mbelow lineto $width $mbelow lineto $width 0 lineto closepath fill\n";


$m1 = 0 - .3333333;
$m2 = $mbelow + .33333333;

# print "0 $m1 moveto 0 $m2 lineto $width $m2 lineto $width $m1 lineto closepath fill\n";

open(IN, "ekg");
$ekg = <IN>;
close(IN);

# ekg
printf("%.3f %.3f %.3f setrgbcolor\n", 255/255, 245/255, 50/255);

# 315 to 472
$min = 315;
$max = 472;

$scale = 3 / ($max - $min) * .8;

$m1 += .1 * ($m2 - $m1);

$voff = 10;

$xkgoff = 0;
while ($xkgoff * $scale < 14000) {
	$text = $ekg;

	$again = 1;
	while ($again) {
		$again = 0;

		if ($text =~ s/^M ([0-9-.]+),([0-9-.]+) *//) {
			printf("%.6f %.6f moveto\n", ($1 + $xkgoff) * $scale - $xoff, $m1 - ($2 - $min) * $scale + $voff);
			$again = 1;
		}
		if ($text =~ s/^L ([0-9-.]+),([0-9-.]+) *//) {
			printf("%.6f %.6f lineto\n", ($1 + $xkgoff) * $scale - $xoff, $m1 - ($2 - $min) * $scale + $voff);
			$again = 1;
		}
		if ($text =~ s/^C ([0-9-.]+),([0-9-.]+) ([0-9-.]+),([0-9-.]+) ([0-9-.]+),([0-9-.]+) *//) {
			printf("%.6f %.6f %.6f %.6f %.6f %.6f curveto\n",
				 ($1 + $xkgoff) * $scale - $xoff, $m1 - ($2 - $min) * $scale + $voff,
				 ($3 + $xkgoff) * $scale - $xoff, $m1 - ($4 - $min) * $scale + $voff,
				 ($5 + $xkgoff) * $scale - $xoff, $m1 - ($6 - $min) * $scale + $voff,
			);
			$again = 1;
		}
	}

	print "stroke\n";

	$xkgoff += 255;
}

print "showpage\n";
